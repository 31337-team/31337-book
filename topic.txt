Дима Пасько:
	У меня был vision книги по best practives с главами тима IoC, NoSQL, DVCS, но это очень поверхностно.
	Из идей была так что бы все примеры лежали на гитхаб. 
	Я вижу цель книги так: чтобы кто-то прочел её и увидел, что он далеко не все знает и есть еще много чего интересного, так сказать повысить уровень среднего дотнетчика.
	
Денис Маркелов:
	имхо, хорошо было бы написать нечто, что связывало бы многие другие специализированные книжки, и содежало бы то чего там нет, в вопросах опыта. 
	Например есть книжки которые научат как юзать гит, но нет таких, которые расскажут что гит, ioc, nosql - это хорошо, и когда это хорошо, и почему, т.е. для расширения кругозора.
	
Миша Чалый:
	ну есть обучающие, рихтер такие пишет, тоесть если описано секьюрити, то от и до.
	я же больше склоняюсь к чемунить более развлекательному, гиковая история про секьюрити, мож решение какойто проблемы, с худ подробностями.

Саша Белецкий:
	пока слабо представляю себе, что из этого может получится.. но, идея очень крутая и почему бы не попробывать!
	книга должна быть легкого стиля, расчитанная на опытную аудиторию, знакомую с контестом. не знаю, как это описать, но эффект от прочтения
	должен быть аналогичен общению с коллегами по цеху на конфах или локальных встечах (серия книжек Progmatic Programmer, как образец)

Игорь Хавкин:
	цель: создать полезный для .NET dev community контент, желательно превзойти уровень собственных (персональных) блогов =) (иначе легче потратить время на блоги... и тогда в чем же смысл начинать? впрочем, я лично персональный блог, можно сказать, и не начинал... :P)

	ресурсы: кучка людей =) скорее-всего не постоянная, одновременно ~5 человек, part-time

	Существующие источники полезной инфы: 
	* персональные блоги (включая микроблоггинг, хотя он уже более "коллективный")
	* аггрегаторы блогов/статей или "коллективный блог" (хабр для русскоязычных, более общий reddit и т.д.)
	* журналы (fprog.ru, pragprog magazine - http://pragprog.com/magazines)
	* "маленькие" и частные книги (pragprog из вот таких: http://pragprog.com/titles)
	* "серьезные" книги (там где уже замешаны полноценные издательства по типу manning, apress, o'reilly и т.д.)

	Количество информации, качество и консистентность, как правило, возрастает от персональных блогов к серьезным
	книгам. Сложность и сроки выполнения итерации тоже (а больше сроки - больше лаг на новые вещи, меньше новинок).
	Думаю, что целиться на книги уровня полноценных издательств не стоит :) Их и так много, и в своей сфере мы им
	не конкурренты (кто-то хочет с первой попытки обойти Jon Skeet в глубине восприятия C#?). Персональные 
	блоги - оффтопик, так как мы пытаемся понять, что может быть лучше них :)

	Чем группа гиков отличается от них же по одиночке (в качестве авторов контента)?
	- поддержка бОльшей консистентности в тематике (потому что мы будем вынуждены работать вместе, то есть хотя бы
	  над приблизительно одной тематикой, близкой и понятной всем; но и, следовательно, меньше персонального; 
	  чую, главы про велосипеды не будет, по крайней мере с теми, которые с двумя колесами =( )
	- совместное ревью и исправление ( = выше качество)
	- регулярность (если один автор выпадает на месяцок-другой, то это еще не означает полного молчания в эфире 
	  на это время)
	- возможность привлечь внимание к ресурсу и получить визиторов, искавших изначально тему одного из соавторов
	  (например, человек мог прийти почитать про Nancy, а узнает еще и про DVCS, даже если ни один автор это
	  сам не покроет)

	Думаю, что наша команда не будет достаточно организована (мы с трудом и на скайп чат собраться можем) и не будет 
	общего vision, чтобы вышел на 100% синхронизированный контент даже мелкой книги от начала до конца.
	(поэтому мне и не нравится, например, одно здоровое приложение, писанное от начала до конца разными авторами,
	чтобы раскрыть общую картину "как надо писать". ИМХО мы просто не настолько хорошо будем работать как одна
	команда, чтобы это получилось. это как есть куча раздельных threads выполнения, а мы лишь сделаем себе кучу
	locks, чтобы это завязать в одну общую картину = IMO дорогое удовольствие для начала, нам бы без жесткой
	синхронизации научиться работать вместе)

	Остаются варианты: коллективный блог или журнал.
	Я бы рискнул сделать в стиле журнала... Это ближе к первоначальной идее и выглядит реалистичным для первой 
	пробы работать группой. Более agile, чем книга - частые релизы (не реже раза в 2 месяца), отсутствие жесткой 
	завязки на членов команды (процесс не потребует лидера с vision проекта и т.д.; куча частных/любимых тем разных авторов, объединенных под относительно общей целью и тематикой; легко менять состав команды), при этом можно выжать плюсы в повышении качества, регулярности и консистентности (в сравнении с персональными блогами). Еще один субъективный плюс - по-моему, журналов в .NET dev community значительно меньше, чем информации от аггрегаторов+коллективных блогов - легче создать что-то новое и полезное. Журнал позволит отработать какие-то интересные темы, которые в зависимости от feedback и желания авторов можно развивать дальше.

	Как идея общей тематики: .NET, opensource, альтернативные вещи в девелопменте (не мейнстрим), в общем-то
	нечто близкое духу ALT.NET.
	Идеи частных тем (которые можно развивать от выпуска к выпуску) - 
	* архитектура opensource приложений - их часто стравнивают по использованию, но реже ковыряют глубже:
	  например, можно попробовать раскрыть процесс изменения какого-то проекта под маленькую новую фичу - тот
	  же NSubstitute и хотя бы очень частная реализация partial mocks или допиливать code52, где интересно;
	  можно пытаться делать в стиле от идеи новой фичи до полноценного контрибьюшена в реальный opensource 
	  проект - это допустимо бить на несколько релизов журнала, если затянется)
	стандартные фишки тоже катят:
	* сравнение каких-то технологий, тематические сборки по нескольким связанным 
	  технологиям сразу (вот как FubuMVC от Сергея + Nancy от Саши, могло бы интересно смотреться в одном номере!)
	* не-.NET для .NET devs (python, RoR, какие-то взгляды на альтернативные стеки технологий от практикующих
	  .NET devs и т.д.)